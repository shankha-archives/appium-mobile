# Version 1.0
disabled_rules: # rule identifiers to exclude from running, need to be included in future.
  - colon
  - comma
  - control_statement
  - line_length
  - type_body_length
  - file_length
  - force_cast
  - force_try
  - type_name
  - identifier_name
  - function_body_length
  - shorthand_operator
  - cyclomatic_complexity
  - large_tuple
  - closure_parameter_position
  - unneeded_break_in_switch
  - switch_case_alignment
  - redundant_string_enum_value
  - for_where
  - implicit_getter
  - computed_accessors_order
  - inclusive_language
  - unused_enumerated
  - class_delegate_protocol
  - orphaned_doc_comment
  - unused_optional_binding
  - block_based_kvo
  - function_parameter_count
  - operator_whitespace
  - no_fallthrough_only
  - legacy_hashing
  - trailing_newline
  - return_arrow_whitespace
  - trailing_whitespace
  - opening_brace
  

opt_in_rules: # some rules are only opt-in
#  - empty_count
  # Find all the available rules by running:
  # swiftlint rules
    - multiple_closures_with_trailing_closure
included: # paths to include during linting. `--path` is ignored if present.
excluded: # paths to ignore during linting. Takes precedence over `included`.
  - Carthage
  - Pods
  - Source/ExcludedFolder
  - Source/ExcludedFile.swift
  - Source/*/ExcludedFile.swift # Exclude files with a wildcard
analyzer_rules: # Rules run by `swiftlint analyze` (experimental)
  - explicit_self

reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, junit, html, emoji, sonarqube, markdown)
